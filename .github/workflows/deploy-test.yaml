name: Deploy to Test (Test)

on:
  push:
    branches:
      - release/*

jobs:
  deploy-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Extract Git SHA
        id: vars
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.14.0

      - name: Install OpenShift CLI (oc)
        run: |
          curl -LO https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz
          tar -xzf oc.tar.gz
          sudo mv oc /usr/local/bin

      - name: Login to OpenShift (Test)
        env:
          OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
          OPENSHIFT_TOKEN_TEST: ${{ secrets.OPENSHIFT_TOKEN }}
        run: |
          oc login $OPENSHIFT_SERVER --token=$OPENSHIFT_TOKEN_TEST --insecure-skip-tls-verify
          oc project c79ac4-test

      - name: Deploy using Helm (Test)
        run: |
          helm upgrade --install adze-test ./helm-chart \
            --namespace c79ac4-test \
            --set image.tag=${{ env.SHORT_SHA }} \
            -f helm-chart/values-test.yaml

      - name: Wait for pod to become ready
        run: |
          echo "⏳ Waiting for pod to be created..."
          until oc get pods -n c79ac4-test -l app.kubernetes.io/name=adze -o name | grep pod; do
            sleep 3
          done
      
          echo "⏳ Waiting for pod to become ready..."
          until oc get pods -n c79ac4-test -l app.kubernetes.io/name=adze \
            -o jsonpath='{.items[0].status.containerStatuses[0].ready}' 2>/dev/null | grep true; do
            sleep 5
          done

      - name: Run CLI integration test inside pod
        run: |
          POD=$(oc get pods -n c79ac4-test -l app.kubernetes.io/name=adze -o jsonpath='{.items[0].metadata.name}')
          oc exec -n c79ac4-test $POD -- \
            python src/xml_converter.py -f /app/data/input/CFL01010.xdp -o /app/data/output
          echo "✅ CLI conversion completed."
          oc exec -n c79ac4-test $POD -- \
            ls /app/data/output | grep CFL01010_xdp_output_ || echo "No test files found"

      - name: Clean up test-generated files
        run: |
          POD=$(oc get pods -n c79ac4-test -l app.kubernetes.io/name=adze -o jsonpath='{.items[0].metadata.name}')
          oc exec -n c79ac4-test $POD -- \
            sh -c 'rm -f /app/data/output/CFL01010_xdp_output_*.json /app/data/report/CFL01010_xdp_report_*.json'

      - name: Create Sysdig token secret in OpenShift (if not exists)
        run: |
          oc delete secret sysdig-api-secret -n c79ac4-test --ignore-not-found
          oc create secret generic sysdig-api-secret \
            --from-literal=token=${{ secrets.SYSDIG_API_TOKEN }} \
            -n c79ac4-test          

      - name: Trigger Tekton Pipeline (Sysdig)
        # if: ${{ false }}  # Enable when ready
        run: |
          tkn pipeline start adze-integration-pipeline \
            -n c79ac4-test \
            -p image-url=jiminaot/xml-json-converter:${{ env.SHORT_SHA }}
